<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<div xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:field="urn:jsptagdir:/WEB-INF/tags/form/fields" xmlns:form="urn:jsptagdir:/WEB-INF/tags/form" xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:spring="http://www.springframework.org/tags" xmlns:util="urn:jsptagdir:/WEB-INF/tags/util" version="2.0">
    <jsp:directive.page contentType="text/html;charset=UTF-8"/>
    <jsp:output omit-xml-declaration="yes"/>
    <spring:message code="app_dsr_file" htmlEscape="false" var="dsr_file"/>
    <spring:url value="/books/dsr/download?file=" var="csv_url"/>
    <spring:url value="/estimates/save" var="saveUrl"/>
    <spring:message code="label_books_dsr_index" htmlEscape="false" var="title"/>
    <script src="${jqwidgets_url}/jqxcore.js" type="text/javascript">
        <!-- required for FF3 and Opera -->
    </script>
    <script src="${jqwidgets_url}/jqxdata.js" type="text/javascript">
        <!-- required for FF3 and Opera -->
    </script>
    <script src="${jqwidgets_url}/jqxbuttons.js" type="text/javascript">
        <!-- required for FF3 and Opera -->
    </script>
    <script src="${jqwidgets_url}/jqxscrollbar.js" type="text/javascript">
        <!-- required for FF3 and Opera -->
    </script>
    <script src="${jqwidgets_url}/jqxmenu.js" type="text/javascript">
        <!-- required for FF3 and Opera -->
    </script>
    <script src="${jqwidgets_url}/jqxgrid.js" type="text/javascript">
        <!-- required for FF3 and Opera -->
    </script>
    <script src="${jqwidgets_url}/jqxgrid.selection.js" type="text/javascript">
        <!-- required for FF3 and Opera -->
    </script>
    <script src="${jqwidgets_url}/jqxgrid.filter.js" type="text/javascript">
        <!-- required for FF3 and Opera -->
    </script>
    <script src="${jqwidgets_url}/jqxlistbox.js" type="text/javascript">
        <!-- required for FF3 and Opera -->
    </script>
    <script src="${jqwidgets_url}/jqxdropdownlist.js" type="text/javascript">
        <!-- required for FF3 and Opera -->
    </script>
    <script src="${jqwidgets_url}/jqxcheckbox.js" type="text/javascript">
        <!-- required for FF3 and Opera -->
    </script>
    <script src="${jqwidgets_url}/jqxgrid.pager.js" type="text/javascript">
        <!-- required for FF3 and Opera -->
    </script>
    <script src="${jqwidgets_url}/jqxgrid.edit.js" type="text/javascript">
        <!-- required for FF3 and Opera -->
    </script>
    <script src="${jqwidgets_url}/jqxgrid.columnsresize.js" type="text/javascript">
        <!-- required for FF3 and Opera -->
    </script>
    <util:panel id="title" title="Create new estimate">
        <script type="text/javascript">
        $(document).ready(function () {
        	var selectedDataIndexes = [];
        	$("input:text").focus(function() { $(this).select(); } );
        	
            var getAdapter = function () {
                // prepare the data
            var url_data = '${csv_url}${dsr_file}';
            var source =
            {
                dataType: "xml",
                dataFields: [
                    { name: 'code', type: 'string' },
                    { name: 'desc', type: 'string' },
                    { name: 'unit', type: 'string' },
                    { name: 'rate', type: 'string' },
                    { name: 'PartRate', type: 'string' }
                ],
                root: "dsr-data",
                record: "record",
                url: url_data
            };
            var dataAdapter = new $.jqx.dataAdapter(source);
                return dataAdapter;
            }

            // initialize jqxGrid
            $("#grid").jqxGrid(
            {
                source: getAdapter(),
                width: '100%',
                showtoolbar: false,
                pageable: true,
                autorowheight: true,
                autoheight: true,
                selectionmode: 'checkbox',
                editable: true,
                editmode: 'click',
                columnsresize: true,
                columns: [
                	{ text: 'Code', dataField: 'code', editable: false },
                    { text: 'Description of Items', dataField: 'desc' , editable: false },
                    { text: 'Unit', dataField: 'unit' , editable: false },
                    { text: 'Rate (Rs)', dataField: 'rate', editable: true },
                ]
            });
            
            $('#grid').on('rowselect', function (event) {
                // event arguments.
                var args = event.args;
                // row's bound index.
                var rowBoundIndex = args.rowindex;
                // row's data. The row's data object or null(when all rows are being selected or unselected with a single action). If you have a datafield called "firstName", to access the row's firstName, use var firstName = rowData.firstName;
                var rowData = args.row;

                if (typeof rowBoundIndex === 'number') {
                    if (rowData.rate === '') {
                        $('#grid').jqxGrid('unselectrow', rowBoundIndex);
                    }
                } else if (typeof rowBoundIndex === 'object') {
                    
                }
            });

            // create jqxWindow.
            
            $("#inputField").on('change keyup paste', function() {
                $("#grid").jqxGrid('clearfilters');
                var datafield = "code";
                var searchText = $("#inputField").val();
                var filtergroup = new $.jqx.filter();
                var filter_or_operator = 1;
                var filtervalue = searchText;
                var filtercondition = 'starts_with';
                var filter = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);
                filtergroup.addfilter(filter_or_operator, filter);
                $("#grid").jqxGrid('addfilter', datafield, filtergroup);
                // apply the filters.
                $("#grid").jqxGrid('applyfilters');
            });
            
            $("#descField").on('change keyup paste', function() {
                $("#grid").jqxGrid('clearfilters');
                var datafield = "desc";
                var searchText = $("#descField").val();
                var filtergroup = new $.jqx.filter();
                var filter_or_operator = 1;
                var filtervalue = searchText;
                var filtercondition = 'contains';
                var filter = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);
                filtergroup.addfilter(filter_or_operator, filter);
                $("#grid").jqxGrid('addfilter', datafield, filtergroup);
                // apply the filters.
                $("#grid").jqxGrid('applyfilters');
            });
            
            $("#rateField").on('change keyup paste', function() {
                $("#grid").jqxGrid('clearfilters');
                var datafield = "rate";
                var searchText = $("#rateField").val();
                var filtergroup = new $.jqx.filter();
                var filter_or_operator = 1;
                var filtervalue = searchText;
                var filtercondition = 'starts_with';
                var filter = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);
                filtergroup.addfilter(filter_or_operator, filter);
                $("#grid").jqxGrid('addfilter', datafield, filtergroup);
                // apply the filters.
                $("#grid").jqxGrid('applyfilters');
            });
            
            
            var selectedSource =
            {
                datatype: "json",
                datafields: [
                	{ name: 'code', type: 'string' },
                    { name: 'desc', type: 'string' },
                    { name: 'unit', type: 'string' },
                    { name: 'rate', type: 'string' },
                    { name: 'slno', type: 'string' }
                ],
                id: 'id',
                url: ''
            };
            var dataAdapter = new $.jqx.dataAdapter(selectedSource);
            $("#selectedGrid").jqxGrid(
            {
                source: dataAdapter,
                width: '100%',
                showtoolbar: false,
                autorowheight: true,
                autoheight: true,
                editable: true,
                editmode: 'click',
                columnsresize: true,
                columns: [
                	{ text: 'Slno', dataField: 'slno', editable: false },
                    { text: 'Description of Items', dataField: 'desc' , editable: false },
                    { text: 'Unit', dataField: 'unit' , editable: false },
                    { text: 'Rate (Rs)', dataField: 'rate', editable: false },
                    { text: 'code', dataField: 'code', editable: false }
              ]
            });
            
            
            
            
            var extraItemSource =
            {
                datatype: "json",
                datafields: [
                	{ name: 'code', type: 'string' },
                    { name: 'desc', type: 'string' },
                    { name: 'unit', type: 'string' },
                    { name: 'rate', type: 'string' },
                    { name: 'PartRate', type: 'string' }
                ],
                deleterow: function (rowid, commit) {
                    commit(true);
                },
                id: 'id',
                url: ''
            };
            var dataAdapter = new $.jqx.dataAdapter(extraItemSource);
            
            var deleteButton = function (row, columnfield, value, defaulthtml, columnproperties) {
            	//var id = $("#extraItemGrid").jqxGrid('getrowid', row);
            	//console.log(id);
                //return '<button class="btn btn-primary btn-xs" id="+id+" onclick="buttonclick(event)" type="button">
                <span class="glyphicon glyphicon-trash"/>
            </button>';
            };
            $("#extraItemGrid").jqxGrid(
                    {
                        filterable: true,
                    	width: "100%",	
                        pageable: true,
                        pagerMode: 'advanced',
                        pagerButtonsCount: 20,
                        source: dataAdapter,
                        columnsResize: true,
                        showeverpresentrow: true,
                        everpresentrowposition: "bottom",
                        everpresentrowactions: "addBottom reset",
                        editable: true,
                        height: 200,
                        /* autoheight:true, */
                        columns: [
                          { text: 'Code', dataField: 'code'},
                          { text: 'Description of Items', dataField: 'desc' },
                          { text: 'Unit', dataField: 'unit'},
                          { text: 'Rate (Rs)', dataField: 'rate'},
                          {text: 'X', datafield: 'Delete', editable:false , width: 25, cellsrenderer: function () {
                      		return '<button type="button" onclick="deleteSelected()" class="btn btn-primary btn-xs"><span class="glyphicon glyphicon-trash"></span></button>';
	                      	}, 
	                      	buttonclick: function (row) {
	                      	var item = $("#extraItemGrid").jqxGrid('getrowdata', row);
	                      	var rec = $.param(id).split("&amp;");
	                      	var estimateitemid = rec[0].split("=");
	                      	var commit = $("#extraItemGrid").jqxGrid('deleterow', item.id);
	                      	//console.log(commit);
	                      	}
                      }
                        ]
                    });
            
            

            
        });
        
        
        function deleteSelected(){
        	 var getselectedrowindexes = $('#extraItemGrid').jqxGrid('getselectedrowindexes');
             if (getselectedrowindexes.length > 0)
             {
                 var item = $('#extraItemGrid').jqxGrid('getrowdata', getselectedrowindexes[0]);
                 var commit = $("#extraItemGrid").jqxGrid('deleterow', item.id);
             }
        }
        
        var slno_list = [0];
        function save(){
        	$('#selectedGrid').jqxGrid('clear');
        	var selectedrowindexes = $('#grid').jqxGrid('selectedrowindexes');
        	selectedrowindexes=selectedrowindexes.sort((a, b) =&gt; a - b);
        	selectedDataIndexes = [];
        	for(var index in selectedrowindexes ){
        		
        		var i = selectedrowindexes[index];
        		var data = $('#grid').jqxGrid('getrowdata', (i));
        		var code = data.code;
        		if(code!=''){
            		addParentItems('grid','code',code);
            		selectedDataIndexes = selectedDataIndexes.sort((a, b) =&gt; a - b);
            		//console.log(selectedDataIndexes);
        		}
        		
        	}
        	slno_list.length=0;
        	for(var index in selectedDataIndexes ){
        		var i = selectedDataIndexes[index];
        		var data = $('#grid').jqxGrid('getrowdata', (i));
        		var slno = getSerialNumber(data.code);
        		console.log(slno);
        		data.slno = slno;
        		$("#selectedGrid").jqxGrid('addrow', null, data);
        	}
        	

        }
        
        function getSerialNumber(code){
        	console.log('code----' + code)
        	var i = code.split(".").length - 2;
        	console.log('index to updated '+ i);
        	if(i>slno_list.length-1){
        		slno_list.push(0);
        	}
        	slno_list[i] = slno_list[i]+1;
        	slno_list.length=i+1;
        	var slno = slno_list.toString().replace(/,/g, ".");
        	console.log(slno_list.toString().replace(/,/g, "."));
        	return slno;
        }
        
        function addParentItems(grid, field, value, selectField) {
        	var code = value.substr(0, value.lastIndexOf('.'));
        	if(code.split(".").length&gt;1){
        		addParentItems("#grid", field, code, selectField);
        	}
            var rows = $("#grid").jqxGrid('getboundrows');
            var output = [];
            var i = 0;
            rows.forEach(function(row) {
                if(row[field] == value) {
                    	//$("#selectedGrid").jqxGrid('addrow', null, row);
                	//selectedDataIndexes.push(i);
                	if(selectedDataIndexes.indexOf(i) === -1) {
                		selectedDataIndexes.push(i);
				    }
                }
                i++;
            });
        }
        
        function saveExtraItems(){
        	console.log('saving extra items');
        	$('#selectedGrid').jqxGrid('clear');
        	save();
        	var exrows = $('#extraItemGrid').jqxGrid('getrows');
        	for(var i in exrows ){
        		$("#selectedGrid").jqxGrid('addrow', null, exrows[i]);
        	}
        	var fullData = $("#selectedGrid").jqxGrid('getrows');
        	//console.log(fullData);
        	//console.log('---'+JSON.stringify(fullData));
        	$('#jsonData').val(JSON.stringify(fullData));
        }
        
         function saveTransaction() {
        	showloading();
        	var jsonBody = {};
           	jsonBody.nameOfWork = $("#nameOfWork_text").val();
           	jsonBody.items = $("#selectedGrid").jqxGrid('getrows');
        	   $.ajax({
        	      type: "POST",
        	      contentType : 'application/json; charset=utf-8',
        	      dataType : 'json',
        	      url: "${saveUrl}",
        	      data: JSON.stringify(jsonBody), // Note it is important
        	      success :function(result) {
        	    	  //console.log(result);
        	    	  window.location=result.url;
        	    	  $(".loading").fadeOut( 200);
        	     },error: function(e){
        	    	 $(".loading").hide();
     				$("#loader").hide();
        	    	  alert("some error occured");
        	    }
        	  });
         } 
         
         function changeTab(){
        	 alert(1);
        	 $("#tab_1_li").addClass("active");$("#tab_0_li").removeClass("active");
         }
         
        function toggletab(action){
        	var currenttab = ($('#nav_tabs').find('.active')[0].id).charAt(4)*1;
        	console.log(currenttab);
        	if(action=="next" &amp;&amp; currenttab &lt; 3){
            	$("#tab_"+currenttab+"_li").removeClass("active");
            	currenttab++;
            	$("#a_tab_"+currenttab+"_li").trigger( "click" );
        		
        	}
        	if(action=="back" &amp;&amp; currenttab &gt; 0){
            	$("#tab_"+currenttab+"_li").removeClass("active");
            	currenttab--;
            	$("#a_tab_"+currenttab+"_li").trigger( "click" );
        		
        	}
        	
        	
        }
        
    
    </script>
        <div>
            <!-- Custom Tabs -->
            <div class="row" style="background-color: #f5f5f5; padding: 5px; margin-bottom: 10px">
            <div class="col-sm-6">
           <form class="form-horizontal">
     <div class="form-group">
                  <label class="col-sm-4 control-label" style="text-align: left;">Select DSR</label>
                  <div class="col-sm-8">
                  <select id="select_dsr" class="form-control pull-left" onchange="selectDsr(this)">
                    <option value="2018">2018</option>
                    <option value="2016">2016</option>
                  </select>
                  </div>
                </div>
                </form>
            </div>
            </div>
            <div class="row">
                <div class="nav-tabs-custom">
                    <ul id="nav_tabs" class="nav nav-tabs">
                    
                        <li class="active" id="tab_0_li">
                            <a aria-expanded="true" data-toggle="tab" id="a_tab_0_li" href="#tab_0" onclick='$("#save_button").css("display", "none");$("#next_button").css("display", "block");'>Create Estimate</a>
                        </li>
                        <li class="" id="tab_1_li">
                            <a aria-expanded="true" data-toggle="tab" id="a_tab_1_li" href="#tab_1" onclick='$("#save_button").css("display", "none");$("#next_button").css("display", "block");'>Select Items</a>
                        </li>
                        <li class="" id="tab_2_li">
                            <a aria-expanded="false" data-toggle="tab" id="a_tab_2_li" href="#tab_2" onclick='$("#save_button").css("display", "none");$("#next_button").css("display", "block");'>Add Extra Items</a>
                        </li>
                        <li class="" id="tab_3_li">
                            <a aria-expanded="false" data-toggle="tab" id="a_tab_3_li" href="#tab_3" onclick='saveExtraItems();$("#save_button").css("display", "block");$("#next_button").css("display", "none");'>Review and
								Save</a>
                        </li>
                        
			              <li class="pull-right">
			              
			              <a href="#" class="text-muted">
			              <div class="btn-group">
                      <button type="button" class="btn btn-primary" onclick="toggletab('back')">Previous</button>
                      <button type="button" id="next_button" class="btn btn-primary" onclick="toggletab('next')">Next</button>
                      <button id="save_button" type="button" onclick="saveTransaction()" class="btn btn-primary" style="display:none">Save Estimate</button>
                    </div>
			              </a>
			              </li>
			              
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane active" id="tab_0">
                            <form role="form">
                                <div class="box-body">
                                    <div class="form-group">
                                        <div class="form-group">
                                            <label>Name of Work</label>
                                            <textarea class="form-control" id="nameOfWork_text" placeholder="Enter ..." rows="3">
                                                <!-- no empty block -->
                                            </textarea>
                                        </div>
                                    </div>
                                </div>
                                <!-- /.box-body -->
                                
                            </form>
                        </div>
                        <div class="tab-pane" id="tab_1">
                            <!-- TABLE RENDER START -->
                            <div class="col-lg-3 col-xs-6">
                                <div class="form-group">
                                    <!-- <label for="exampleInputEmail1">Code</label> -->
                                    <input class="form-control" id="inputField" placeholder="Enter Code" type="text"/>
                                </div>
                            </div>
                            <div class="col-lg-3 col-xs-6">
          <div class="form-group" style="">
                  <input  type="text" class="form-control" id="descField" placeholder="Enter Description" />
                </div>
        </div>
        <div class="col-lg-3 col-xs-6">
          <div class="form-group" style="">
                  <input  type="text" class="form-control" id="rateField" placeholder="Enter Rate" />
                </div>
        </div>
                            
                            <div id="grid">
                                <!-- div can not be empty -->
                            </div>
                            <!-- TABLE RENDER FINISH -->
                        </div>
                        <div class="tab-pane" id="tab_2">
                            
                            <div id="extraItemGrid">
                                <!-- div can not be empty -->
                            </div>
                        </div>
                        <div class="tab-pane" id="tab_3">
                        <div class="">
                            </div>
                            <div id="selectedGrid">
                                <!-- div can not be empty -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </util:panel>
    <form:create id="fc_com_org_entity_Estimate" modelAttribute="estimate" path="/estimates" render="false" z="user-managed">
        <field:input field="nameOfWork" id="c_com_org_entity_Estimate_nameOfWork" z="AUg9u5IpqA3tz0RizZaDCk7q0Ho="/>
        <field:input field="content" id="c_com_org_entity_Estimate_content" z="Qksx4GPy4+DYDtTeiPSUjr7/2y4="/>
        <field:input field="url" id="c_com_org_entity_Estimate_url" z="pQIxfOOvLlAImC6vuZeDzGYVaic="/>
        <field:input field="items" id="c_com_org_entity_Estimate_items" z="S7JELzxdyku0stPA3Cg0dIZR2TA="/>
        <field:select field="logUser" id="c_com_org_entity_Estimate_logUser" itemValue="id" items="${logusers}" path="/logusers" z="25I7cnuGDZKUjT9ZYndPQcXsLQ4="/>
    </form:create>
    <form:dependency dependencies="${dependencies}" id="d_com_org_entity_Estimate" render="${not empty dependencies}" z="6ytwPi93w71uv9p6aOtap8DHxNg="/>
</div>
