// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.org.entity;

import com.org.entity.MaterialEntry;
import java.util.List;
import org.springframework.transaction.annotation.Transactional;

privileged aspect MaterialEntry_Roo_Jpa_ActiveRecord {
    
    public static final List<String> MaterialEntry.fieldNames4OrderClauseFilter = java.util.Arrays.asList("aggreement", "site", "item", "descriptionOfItem1", "descriptionOfItem2", "date", "company", "supplier", "quantity", "unit", "rate", "remarks");
    
    public static long MaterialEntry.countMaterialEntrys() {
        return entityManager().createQuery("SELECT COUNT(o) FROM MaterialEntry o", Long.class).getSingleResult();
    }
    
    public static List<MaterialEntry> MaterialEntry.findAllMaterialEntrys() {
        return entityManager().createQuery("SELECT o FROM MaterialEntry o", MaterialEntry.class).getResultList();
    }
    
    public static List<MaterialEntry> MaterialEntry.findAllMaterialEntrys(String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM MaterialEntry o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, MaterialEntry.class).getResultList();
    }
    
    public static MaterialEntry MaterialEntry.findMaterialEntry(Long id) {
        if (id == null) return null;
        return entityManager().find(MaterialEntry.class, id);
    }
    
    public static List<MaterialEntry> MaterialEntry.findMaterialEntryEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM MaterialEntry o", MaterialEntry.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    public static List<MaterialEntry> MaterialEntry.findMaterialEntryEntries(int firstResult, int maxResults, String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM MaterialEntry o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, MaterialEntry.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    @Transactional
    public MaterialEntry MaterialEntry.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        MaterialEntry merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
}
