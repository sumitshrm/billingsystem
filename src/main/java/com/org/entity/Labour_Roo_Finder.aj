// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.org.entity;

import com.org.domain.LogUser;
import com.org.entity.Labour;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Labour_Roo_Finder {
    
    public static Long Labour.countFindLaboursByCreatedBy(LogUser createdBy) {
        if (createdBy == null) throw new IllegalArgumentException("The createdBy argument is required");
        EntityManager em = Labour.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM Labour AS o WHERE o.createdBy = :createdBy", Long.class);
        q.setParameter("createdBy", createdBy);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<Labour> Labour.findLaboursByCreatedBy(LogUser createdBy) {
        if (createdBy == null) throw new IllegalArgumentException("The createdBy argument is required");
        EntityManager em = Labour.entityManager();
        TypedQuery<Labour> q = em.createQuery("SELECT o FROM Labour AS o WHERE o.createdBy = :createdBy", Labour.class);
        q.setParameter("createdBy", createdBy);
        return q;
    }
    
    public static TypedQuery<Labour> Labour.findLaboursByCreatedBy(LogUser createdBy, String sortFieldName, String sortOrder) {
        if (createdBy == null) throw new IllegalArgumentException("The createdBy argument is required");
        EntityManager em = Labour.entityManager();
        String jpaQuery = "SELECT o FROM Labour AS o WHERE o.createdBy = :createdBy";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        TypedQuery<Labour> q = em.createQuery(jpaQuery, Labour.class);
        q.setParameter("createdBy", createdBy);
        return q;
    }
    
}
